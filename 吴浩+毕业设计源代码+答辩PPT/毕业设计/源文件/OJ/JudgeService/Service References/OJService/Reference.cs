//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace JudgeService.OJService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageListOfProblemDOUWpDsVqM", Namespace="http://schemas.datacontract.org/2004/07/OJ.BLL.PageList")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JudgeService.OJService.ProblemPageList))]
    public partial class PageListOfProblemDOUWpDsVqM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OJ.Domain.ProblemDO[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OJ.Domain.ProblemDO[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordCount {
            get {
                return this.RecordCountField;
            }
            set {
                if ((this.RecordCountField.Equals(value) != true)) {
                    this.RecordCountField = value;
                    this.RaisePropertyChanged("RecordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProblemPageList", Namespace="http://schemas.datacontract.org/2004/07/OJ.BLL.PageList")]
    [System.SerializableAttribute()]
    public partial class ProblemPageList : JudgeService.OJService.PageListOfProblemDOUWpDsVqM {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageListOfSolutionDOUWpDsVqM", Namespace="http://schemas.datacontract.org/2004/07/OJ.BLL.PageList")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JudgeService.OJService.SolutionPageList))]
    public partial class PageListOfSolutionDOUWpDsVqM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OJ.Domain.SolutionDO[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OJ.Domain.SolutionDO[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordCount {
            get {
                return this.RecordCountField;
            }
            set {
                if ((this.RecordCountField.Equals(value) != true)) {
                    this.RecordCountField = value;
                    this.RaisePropertyChanged("RecordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SolutionPageList", Namespace="http://schemas.datacontract.org/2004/07/OJ.BLL.PageList")]
    [System.SerializableAttribute()]
    public partial class SolutionPageList : JudgeService.OJService.PageListOfSolutionDOUWpDsVqM {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageListOfUserDOUWpDsVqM", Namespace="http://schemas.datacontract.org/2004/07/OJ.BLL.PageList")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JudgeService.OJService.UserPageList))]
    public partial class PageListOfUserDOUWpDsVqM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OJ.Domain.UserDO[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentPage {
            get {
                return this.CurrentPageField;
            }
            set {
                if ((this.CurrentPageField.Equals(value) != true)) {
                    this.CurrentPageField = value;
                    this.RaisePropertyChanged("CurrentPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OJ.Domain.UserDO[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordCount {
            get {
                return this.RecordCountField;
            }
            set {
                if ((this.RecordCountField.Equals(value) != true)) {
                    this.RecordCountField = value;
                    this.RaisePropertyChanged("RecordCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPageList", Namespace="http://schemas.datacontract.org/2004/07/OJ.BLL.PageList")]
    [System.SerializableAttribute()]
    public partial class UserPageList : JudgeService.OJService.PageListOfUserDOUWpDsVqM {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OJService.IOJService")]
    public interface IOJService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/Test", ReplyAction="http://tempuri.org/IOJService/TestResponse")]
        string Test(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetProblemList", ReplyAction="http://tempuri.org/IOJService/GetProblemListResponse")]
        OJ.Domain.ProblemDO[] GetProblemList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetProblemPageList", ReplyAction="http://tempuri.org/IOJService/GetProblemPageListResponse")]
        JudgeService.OJService.ProblemPageList GetProblemPageList(int pageSize, int pageIndex, string queryText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetProblemById", ReplyAction="http://tempuri.org/IOJService/GetProblemByIdResponse")]
        OJ.Domain.ProblemDO GetProblemById(long problemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/AddProblem", ReplyAction="http://tempuri.org/IOJService/AddProblemResponse")]
        OJ.Domain.ProblemDO AddProblem(OJ.Domain.ProblemDO problem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/UpdateProblem", ReplyAction="http://tempuri.org/IOJService/UpdateProblemResponse")]
        OJ.Domain.ProblemDO UpdateProblem(OJ.Domain.ProblemDO problem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/DeleleProblemById", ReplyAction="http://tempuri.org/IOJService/DeleleProblemByIdResponse")]
        bool DeleleProblemById(long problemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/DeleleProblem", ReplyAction="http://tempuri.org/IOJService/DeleleProblemResponse")]
        bool DeleleProblem(OJ.Domain.ProblemDO problem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/SubmitCode", ReplyAction="http://tempuri.org/IOJService/SubmitCodeResponse")]
        OJ.Domain.SolutionDO SubmitCode(long problem, string language, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/SubmitJudgeResult", ReplyAction="http://tempuri.org/IOJService/SubmitJudgeResultResponse")]
        bool SubmitJudgeResult(OJ.Domain.SolutionDO solution);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetSolutionPageList", ReplyAction="http://tempuri.org/IOJService/GetSolutionPageListResponse")]
        JudgeService.OJService.SolutionPageList GetSolutionPageList(int pageSize, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetUserDoByUserName", ReplyAction="http://tempuri.org/IOJService/GetUserDoByUserNameResponse")]
        OJ.Domain.UserDO[] GetUserDoByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetUserPageList", ReplyAction="http://tempuri.org/IOJService/GetUserPageListResponse")]
        JudgeService.OJService.UserPageList GetUserPageList(int pageSize, int pageIndex, string queryText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/GetUserById", ReplyAction="http://tempuri.org/IOJService/GetUserByIdResponse")]
        OJ.Domain.UserDO GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/AddUser", ReplyAction="http://tempuri.org/IOJService/AddUserResponse")]
        string AddUser(string userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/AddUserDo", ReplyAction="http://tempuri.org/IOJService/AddUserDoResponse")]
        bool AddUserDo(OJ.Domain.UserDO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/UpdateUser", ReplyAction="http://tempuri.org/IOJService/UpdateUserResponse")]
        bool UpdateUser(OJ.Domain.UserDO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOJService/DeleteUserById", ReplyAction="http://tempuri.org/IOJService/DeleteUserByIdResponse")]
        bool DeleteUserById(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOJServiceChannel : JudgeService.OJService.IOJService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OJServiceClient : System.ServiceModel.ClientBase<JudgeService.OJService.IOJService>, JudgeService.OJService.IOJService {
        
        public OJServiceClient() {
        }
        
        public OJServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OJServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OJServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OJServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Test(string str) {
            return base.Channel.Test(str);
        }
        
        public OJ.Domain.ProblemDO[] GetProblemList() {
            return base.Channel.GetProblemList();
        }
        
        public JudgeService.OJService.ProblemPageList GetProblemPageList(int pageSize, int pageIndex, string queryText) {
            return base.Channel.GetProblemPageList(pageSize, pageIndex, queryText);
        }
        
        public OJ.Domain.ProblemDO GetProblemById(long problemId) {
            return base.Channel.GetProblemById(problemId);
        }
        
        public OJ.Domain.ProblemDO AddProblem(OJ.Domain.ProblemDO problem) {
            return base.Channel.AddProblem(problem);
        }
        
        public OJ.Domain.ProblemDO UpdateProblem(OJ.Domain.ProblemDO problem) {
            return base.Channel.UpdateProblem(problem);
        }
        
        public bool DeleleProblemById(long problemId) {
            return base.Channel.DeleleProblemById(problemId);
        }
        
        public bool DeleleProblem(OJ.Domain.ProblemDO problem) {
            return base.Channel.DeleleProblem(problem);
        }
        
        public OJ.Domain.SolutionDO SubmitCode(long problem, string language, string code) {
            return base.Channel.SubmitCode(problem, language, code);
        }
        
        public bool SubmitJudgeResult(OJ.Domain.SolutionDO solution) {
            return base.Channel.SubmitJudgeResult(solution);
        }
        
        public JudgeService.OJService.SolutionPageList GetSolutionPageList(int pageSize, int pageIndex) {
            return base.Channel.GetSolutionPageList(pageSize, pageIndex);
        }
        
        public OJ.Domain.UserDO[] GetUserDoByUserName(string userName) {
            return base.Channel.GetUserDoByUserName(userName);
        }
        
        public JudgeService.OJService.UserPageList GetUserPageList(int pageSize, int pageIndex, string queryText) {
            return base.Channel.GetUserPageList(pageSize, pageIndex, queryText);
        }
        
        public OJ.Domain.UserDO GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public string AddUser(string userInfo) {
            return base.Channel.AddUser(userInfo);
        }
        
        public bool AddUserDo(OJ.Domain.UserDO user) {
            return base.Channel.AddUserDo(user);
        }
        
        public bool UpdateUser(OJ.Domain.UserDO user) {
            return base.Channel.UpdateUser(user);
        }
        
        public bool DeleteUserById(int userId) {
            return base.Channel.DeleteUserById(userId);
        }
    }
}
