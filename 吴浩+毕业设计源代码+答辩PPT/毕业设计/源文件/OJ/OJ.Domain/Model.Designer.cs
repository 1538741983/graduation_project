//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("Model", "problemsolution", "problem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.ProblemDO), "solution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.SolutionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "solutionsourceCode", "solution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.SolutionDO), "sourceCode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.SourceCodeDO), true)]
[assembly: EdmRelationshipAttribute("Model", "usersolution", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserDO), "solution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.SolutionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "languageuser", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.LanguageDO), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.UserDO), true)]
[assembly: EdmRelationshipAttribute("Model", "languagesolution", "language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.LanguageDO), "solution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.SolutionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "userloginlog", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserDO), "loginlog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.LoginlogDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UGAssignmentDOUserGroupDO", "UGAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.UGAssignmentDO), "UserGroupDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserGroupDO), true)]
[assembly: EdmRelationshipAttribute("Model", "GPAssignmentDOUserGroupDO", "GPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.GPAssignmentDO), "UserGroupDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserGroupDO), true)]
[assembly: EdmRelationshipAttribute("Model", "RPAssignmentDORoleDo", "RPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.RPAssignmentDO), "RoleDo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.RoleDo), true)]
[assembly: EdmRelationshipAttribute("Model", "URAssignmentDORoleDo", "URAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.URAssignmentDO), "RoleDo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.RoleDo), true)]
[assembly: EdmRelationshipAttribute("Model", "RPAssignmentDOPermissionDO", "RPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.RPAssignmentDO), "PermissionDO1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.PermissionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "GPAssignmentDOPermissionDO", "GPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.GPAssignmentDO), "PermissionDO1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.PermissionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UPAssignmentDOPermissionDO", "UPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.UPAssignmentDO), "PermissionDO1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.PermissionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UserUPAssignmentDO", "UPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.UPAssignmentDO), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UGAssignmentDOUser", "UGAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.UGAssignmentDO), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserDO), true)]
[assembly: EdmRelationshipAttribute("Model", "URAssignmentDOUser", "URAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJ.Domain.URAssignmentDO), "UserDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJ.Domain.UserDO), true)]

#endregion

namespace OJ.Domain
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ModelContainer”部分中的连接字符串初始化新 ModelContainer 对象。
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ModelContainer 对象。
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ModelContainer 对象。
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ProblemDO> Problem
        {
            get
            {
                if ((_Problem == null))
                {
                    _Problem = base.CreateObjectSet<ProblemDO>("Problem");
                }
                return _Problem;
            }
        }
        private ObjectSet<ProblemDO> _Problem;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SolutionDO> Solution
        {
            get
            {
                if ((_Solution == null))
                {
                    _Solution = base.CreateObjectSet<SolutionDO>("Solution");
                }
                return _Solution;
            }
        }
        private ObjectSet<SolutionDO> _Solution;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SourceCodeDO> SourceCode
        {
            get
            {
                if ((_SourceCode == null))
                {
                    _SourceCode = base.CreateObjectSet<SourceCodeDO>("SourceCode");
                }
                return _SourceCode;
            }
        }
        private ObjectSet<SourceCodeDO> _SourceCode;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserDO> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<UserDO>("User");
                }
                return _User;
            }
        }
        private ObjectSet<UserDO> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<LanguageDO> Language
        {
            get
            {
                if ((_Language == null))
                {
                    _Language = base.CreateObjectSet<LanguageDO>("Language");
                }
                return _Language;
            }
        }
        private ObjectSet<LanguageDO> _Language;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<LoginlogDO> Loginlog
        {
            get
            {
                if ((_Loginlog == null))
                {
                    _Loginlog = base.CreateObjectSet<LoginlogDO>("Loginlog");
                }
                return _Loginlog;
            }
        }
        private ObjectSet<LoginlogDO> _Loginlog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserGroupDO> UserGroup
        {
            get
            {
                if ((_UserGroup == null))
                {
                    _UserGroup = base.CreateObjectSet<UserGroupDO>("UserGroup");
                }
                return _UserGroup;
            }
        }
        private ObjectSet<UserGroupDO> _UserGroup;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleDo> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<RoleDo>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<RoleDo> _Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PermissionDO> Permission
        {
            get
            {
                if ((_Permission == null))
                {
                    _Permission = base.CreateObjectSet<PermissionDO>("Permission");
                }
                return _Permission;
            }
        }
        private ObjectSet<PermissionDO> _Permission;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RPAssignmentDO> RPAssignment
        {
            get
            {
                if ((_RPAssignment == null))
                {
                    _RPAssignment = base.CreateObjectSet<RPAssignmentDO>("RPAssignment");
                }
                return _RPAssignment;
            }
        }
        private ObjectSet<RPAssignmentDO> _RPAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<URAssignmentDO> URAssignment
        {
            get
            {
                if ((_URAssignment == null))
                {
                    _URAssignment = base.CreateObjectSet<URAssignmentDO>("URAssignment");
                }
                return _URAssignment;
            }
        }
        private ObjectSet<URAssignmentDO> _URAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UGAssignmentDO> UGAssignment
        {
            get
            {
                if ((_UGAssignment == null))
                {
                    _UGAssignment = base.CreateObjectSet<UGAssignmentDO>("UGAssignment");
                }
                return _UGAssignment;
            }
        }
        private ObjectSet<UGAssignmentDO> _UGAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GPAssignmentDO> GPAssignment
        {
            get
            {
                if ((_GPAssignment == null))
                {
                    _GPAssignment = base.CreateObjectSet<GPAssignmentDO>("GPAssignment");
                }
                return _GPAssignment;
            }
        }
        private ObjectSet<GPAssignmentDO> _GPAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UPAssignmentDO> UPAssignment
        {
            get
            {
                if ((_UPAssignment == null))
                {
                    _UPAssignment = base.CreateObjectSet<UPAssignmentDO>("UPAssignment");
                }
                return _UPAssignment;
            }
        }
        private ObjectSet<UPAssignmentDO> _UPAssignment;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Problem EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProblem(ProblemDO problemDO)
        {
            base.AddObject("Problem", problemDO);
        }
    
        /// <summary>
        /// 用于向 Solution EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSolution(SolutionDO solutionDO)
        {
            base.AddObject("Solution", solutionDO);
        }
    
        /// <summary>
        /// 用于向 SourceCode EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSourceCode(SourceCodeDO sourceCodeDO)
        {
            base.AddObject("SourceCode", sourceCodeDO);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(UserDO userDO)
        {
            base.AddObject("User", userDO);
        }
    
        /// <summary>
        /// 用于向 Language EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLanguage(LanguageDO languageDO)
        {
            base.AddObject("Language", languageDO);
        }
    
        /// <summary>
        /// 用于向 Loginlog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLoginlog(LoginlogDO loginlogDO)
        {
            base.AddObject("Loginlog", loginlogDO);
        }
    
        /// <summary>
        /// 用于向 UserGroup EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserGroup(UserGroupDO userGroupDO)
        {
            base.AddObject("UserGroup", userGroupDO);
        }
    
        /// <summary>
        /// 用于向 Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRole(RoleDo roleDo)
        {
            base.AddObject("Role", roleDo);
        }
    
        /// <summary>
        /// 用于向 Permission EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPermission(PermissionDO permissionDO)
        {
            base.AddObject("Permission", permissionDO);
        }
    
        /// <summary>
        /// 用于向 RPAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRPAssignment(RPAssignmentDO rPAssignmentDO)
        {
            base.AddObject("RPAssignment", rPAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 URAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToURAssignment(URAssignmentDO uRAssignmentDO)
        {
            base.AddObject("URAssignment", uRAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 UGAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUGAssignment(UGAssignmentDO uGAssignmentDO)
        {
            base.AddObject("UGAssignment", uGAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 GPAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGPAssignment(GPAssignmentDO gPAssignmentDO)
        {
            base.AddObject("GPAssignment", gPAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 UPAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUPAssignment(UPAssignmentDO uPAssignmentDO)
        {
            base.AddObject("UPAssignment", uPAssignmentDO);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GPAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GPAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GPAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_UserGroup">Id_UserGroup 属性的初始值。</param>
        /// <param name="id_Permission">Id_Permission 属性的初始值。</param>
        public static GPAssignmentDO CreateGPAssignmentDO(global::System.Int64 id, global::System.Int64 id_UserGroup, global::System.Int64 id_Permission)
        {
            GPAssignmentDO gPAssignmentDO = new GPAssignmentDO();
            gPAssignmentDO.Id = id;
            gPAssignmentDO.Id_UserGroup = id_UserGroup;
            gPAssignmentDO.Id_Permission = id_Permission;
            return gPAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_UserGroup
        {
            get
            {
                return _Id_UserGroup;
            }
            set
            {
                OnId_UserGroupChanging(value);
                ReportPropertyChanging("Id_UserGroup");
                _Id_UserGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_UserGroup");
                OnId_UserGroupChanged();
            }
        }
        private global::System.Int64 _Id_UserGroup;
        partial void OnId_UserGroupChanging(global::System.Int64 value);
        partial void OnId_UserGroupChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Permission
        {
            get
            {
                return _Id_Permission;
            }
            set
            {
                OnId_PermissionChanging(value);
                ReportPropertyChanging("Id_Permission");
                _Id_Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Permission");
                OnId_PermissionChanged();
            }
        }
        private global::System.Int64 _Id_Permission;
        partial void OnId_PermissionChanging(global::System.Int64 value);
        partial void OnId_PermissionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 语言
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LanguageDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 LanguageDO 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="name">name 属性的初始值。</param>
        public static LanguageDO CreateLanguageDO(global::System.Int32 id, global::System.String name)
        {
            LanguageDO languageDO = new LanguageDO();
            languageDO.id = id;
            languageDO.name = name;
            return languageDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 语言ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 语言名称
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="LoginlogDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoginlogDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 LoginlogDO 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="id_user">id_user 属性的初始值。</param>
        /// <param name="password">password 属性的初始值。</param>
        /// <param name="ip">ip 属性的初始值。</param>
        /// <param name="logintime">logintime 属性的初始值。</param>
        public static LoginlogDO CreateLoginlogDO(global::System.Int64 id, global::System.Int64 id_user, global::System.String password, global::System.String ip, global::System.DateTime logintime)
        {
            LoginlogDO loginlogDO = new LoginlogDO();
            loginlogDO.id = id;
            loginlogDO.id_user = id_user;
            loginlogDO.password = password;
            loginlogDO.ip = ip;
            loginlogDO.logintime = logintime;
            return loginlogDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 登录用户ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_user
        {
            get
            {
                return _id_user;
            }
            set
            {
                Onid_userChanging(value);
                ReportPropertyChanging("id_user");
                _id_user = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_user");
                Onid_userChanged();
            }
        }
        private global::System.Int64 _id_user;
        partial void Onid_userChanging(global::System.Int64 value);
        partial void Onid_userChanged();
    
        /// <summary>
        /// 登录密码
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// 登陆IP
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ip
        {
            get
            {
                return _ip;
            }
            set
            {
                OnipChanging(value);
                ReportPropertyChanging("ip");
                _ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ip");
                OnipChanged();
            }
        }
        private global::System.String _ip;
        partial void OnipChanging(global::System.String value);
        partial void OnipChanged();
    
        /// <summary>
        /// 登录时间
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime logintime
        {
            get
            {
                return _logintime;
            }
            set
            {
                OnlogintimeChanging(value);
                ReportPropertyChanging("logintime");
                _logintime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("logintime");
                OnlogintimeChanged();
            }
        }
        private global::System.DateTime _logintime;
        partial void OnlogintimeChanging(global::System.DateTime value);
        partial void OnlogintimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PermissionDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PermissionDO 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="code">code 属性的初始值。</param>
        /// <param name="name">name 属性的初始值。</param>
        public static PermissionDO CreatePermissionDO(global::System.Int64 id, global::System.String code, global::System.String name)
        {
            PermissionDO permissionDO = new PermissionDO();
            permissionDO.id = id;
            permissionDO.code = code;
            permissionDO.name = name;
            return permissionDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String code
        {
            get
            {
                return _code;
            }
            set
            {
                OncodeChanging(value);
                ReportPropertyChanging("code");
                _code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("code");
                OncodeChanged();
            }
        }
        private global::System.String _code;
        partial void OncodeChanging(global::System.String value);
        partial void OncodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 题目表
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ProblemDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProblemDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ProblemDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="describe">Describe 属性的初始值。</param>
        /// <param name="input">Input 属性的初始值。</param>
        /// <param name="output">Output 属性的初始值。</param>
        /// <param name="sample_input">Sample_input 属性的初始值。</param>
        /// <param name="sample_output">Sample_output 属性的初始值。</param>
        /// <param name="in_date">In_date 属性的初始值。</param>
        /// <param name="time_limit">Time_limit 属性的初始值。</param>
        /// <param name="memory_limit">Memory_limit 属性的初始值。</param>
        /// <param name="difficulty">Difficulty 属性的初始值。</param>
        /// <param name="uploader">Uploader 属性的初始值。</param>
        public static ProblemDO CreateProblemDO(global::System.Int64 id, global::System.String title, global::System.String describe, global::System.String input, global::System.String output, global::System.String sample_input, global::System.String sample_output, global::System.DateTime in_date, global::System.Int32 time_limit, global::System.Int32 memory_limit, global::System.String difficulty, global::System.Int64 uploader)
        {
            ProblemDO problemDO = new ProblemDO();
            problemDO.Id = id;
            problemDO.Title = title;
            problemDO.Describe = describe;
            problemDO.Input = input;
            problemDO.Output = output;
            problemDO.Sample_input = sample_input;
            problemDO.Sample_output = sample_output;
            problemDO.In_date = in_date;
            problemDO.Time_limit = time_limit;
            problemDO.Memory_limit = memory_limit;
            problemDO.Difficulty = difficulty;
            problemDO.Uploader = uploader;
            return problemDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 题目ID（主键）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 标题
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 描述
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Describe
        {
            get
            {
                return _Describe;
            }
            set
            {
                OnDescribeChanging(value);
                ReportPropertyChanging("Describe");
                _Describe = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Describe");
                OnDescribeChanged();
            }
        }
        private global::System.String _Describe;
        partial void OnDescribeChanging(global::System.String value);
        partial void OnDescribeChanged();
    
        /// <summary>
        /// 输入说明
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Input
        {
            get
            {
                return _Input;
            }
            set
            {
                OnInputChanging(value);
                ReportPropertyChanging("Input");
                _Input = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Input");
                OnInputChanged();
            }
        }
        private global::System.String _Input;
        partial void OnInputChanging(global::System.String value);
        partial void OnInputChanged();
    
        /// <summary>
        /// 输出说明
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Output
        {
            get
            {
                return _Output;
            }
            set
            {
                OnOutputChanging(value);
                ReportPropertyChanging("Output");
                _Output = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Output");
                OnOutputChanged();
            }
        }
        private global::System.String _Output;
        partial void OnOutputChanging(global::System.String value);
        partial void OnOutputChanged();
    
        /// <summary>
        /// 样例输入
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sample_input
        {
            get
            {
                return _Sample_input;
            }
            set
            {
                OnSample_inputChanging(value);
                ReportPropertyChanging("Sample_input");
                _Sample_input = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sample_input");
                OnSample_inputChanged();
            }
        }
        private global::System.String _Sample_input;
        partial void OnSample_inputChanging(global::System.String value);
        partial void OnSample_inputChanged();
    
        /// <summary>
        /// 样例输出
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Sample_output
        {
            get
            {
                return _Sample_output;
            }
            set
            {
                OnSample_outputChanging(value);
                ReportPropertyChanging("Sample_output");
                _Sample_output = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Sample_output");
                OnSample_outputChanged();
            }
        }
        private global::System.String _Sample_output;
        partial void OnSample_outputChanging(global::System.String value);
        partial void OnSample_outputChanged();
    
        /// <summary>
        /// 是否为特别题目
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fg_special
        {
            get
            {
                return _Fg_special;
            }
            set
            {
                OnFg_specialChanging(value);
                ReportPropertyChanging("Fg_special");
                _Fg_special = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fg_special");
                OnFg_specialChanged();
            }
        }
        private global::System.String _Fg_special;
        partial void OnFg_specialChanging(global::System.String value);
        partial void OnFg_specialChanged();
    
        /// <summary>
        /// 提示
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hint
        {
            get
            {
                return _Hint;
            }
            set
            {
                OnHintChanging(value);
                ReportPropertyChanging("Hint");
                _Hint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hint");
                OnHintChanged();
            }
        }
        private global::System.String _Hint;
        partial void OnHintChanging(global::System.String value);
        partial void OnHintChanged();
    
        /// <summary>
        /// 来源
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// 加入时间
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime In_date
        {
            get
            {
                return _In_date;
            }
            set
            {
                OnIn_dateChanging(value);
                ReportPropertyChanging("In_date");
                _In_date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("In_date");
                OnIn_dateChanged();
            }
        }
        private global::System.DateTime _In_date;
        partial void OnIn_dateChanging(global::System.DateTime value);
        partial void OnIn_dateChanged();
    
        /// <summary>
        /// 限时（秒）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Time_limit
        {
            get
            {
                return _Time_limit;
            }
            set
            {
                OnTime_limitChanging(value);
                ReportPropertyChanging("Time_limit");
                _Time_limit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time_limit");
                OnTime_limitChanged();
            }
        }
        private global::System.Int32 _Time_limit;
        partial void OnTime_limitChanging(global::System.Int32 value);
        partial void OnTime_limitChanged();
    
        /// <summary>
        /// 空间限制（MByte）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Memory_limit
        {
            get
            {
                return _Memory_limit;
            }
            set
            {
                OnMemory_limitChanging(value);
                ReportPropertyChanging("Memory_limit");
                _Memory_limit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Memory_limit");
                OnMemory_limitChanged();
            }
        }
        private global::System.Int32 _Memory_limit;
        partial void OnMemory_limitChanging(global::System.Int32 value);
        partial void OnMemory_limitChanged();
    
        /// <summary>
        /// 是否屏蔽
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Defunct
        {
            get
            {
                return _Defunct;
            }
            set
            {
                OnDefunctChanging(value);
                ReportPropertyChanging("Defunct");
                _Defunct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Defunct");
                OnDefunctChanged();
            }
        }
        private global::System.Boolean _Defunct = false;
        partial void OnDefunctChanging(global::System.Boolean value);
        partial void OnDefunctChanged();
    
        /// <summary>
        /// 总AC次数
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private Nullable<global::System.Int64> _Accepted;
        partial void OnAcceptedChanging(Nullable<global::System.Int64> value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// 总提交次数
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Submit
        {
            get
            {
                return _Submit;
            }
            set
            {
                OnSubmitChanging(value);
                ReportPropertyChanging("Submit");
                _Submit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submit");
                OnSubmitChanged();
            }
        }
        private Nullable<global::System.Int64> _Submit;
        partial void OnSubmitChanging(Nullable<global::System.Int64> value);
        partial void OnSubmitChanged();
    
        /// <summary>
        /// 通过（计算字段）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Solved
        {
            get
            {
                return _Solved;
            }
            set
            {
                OnSolvedChanging(value);
                ReportPropertyChanging("Solved");
                _Solved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Solved");
                OnSolvedChanged();
            }
        }
        private Nullable<global::System.Int32> _Solved;
        partial void OnSolvedChanging(Nullable<global::System.Int32> value);
        partial void OnSolvedChanged();
    
        /// <summary>
        /// 难度
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Difficulty
        {
            get
            {
                return _Difficulty;
            }
            set
            {
                OnDifficultyChanging(value);
                ReportPropertyChanging("Difficulty");
                _Difficulty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Difficulty");
                OnDifficultyChanged();
            }
        }
        private global::System.String _Difficulty;
        partial void OnDifficultyChanging(global::System.String value);
        partial void OnDifficultyChanged();
    
        /// <summary>
        /// 上传者
        /// </summary>
        /// <LongDescription>
        /// 上传者
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Uploader
        {
            get
            {
                return _Uploader;
            }
            set
            {
                OnUploaderChanging(value);
                ReportPropertyChanging("Uploader");
                _Uploader = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Uploader");
                OnUploaderChanged();
            }
        }
        private global::System.Int64 _Uploader;
        partial void OnUploaderChanging(global::System.Int64 value);
        partial void OnUploaderChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RoleDo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleDo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleDo 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static RoleDo CreateRoleDo(global::System.Int64 id, global::System.String name)
        {
            RoleDo roleDo = new RoleDo();
            roleDo.Id = id;
            roleDo.Name = name;
            return roleDo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RPAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RPAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RPAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_Role">Id_Role 属性的初始值。</param>
        /// <param name="id_Per">Id_Per 属性的初始值。</param>
        public static RPAssignmentDO CreateRPAssignmentDO(global::System.Int64 id, global::System.Int64 id_Role, global::System.Int64 id_Per)
        {
            RPAssignmentDO rPAssignmentDO = new RPAssignmentDO();
            rPAssignmentDO.Id = id;
            rPAssignmentDO.Id_Role = id_Role;
            rPAssignmentDO.Id_Per = id_Per;
            return rPAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Role
        {
            get
            {
                return _Id_Role;
            }
            set
            {
                OnId_RoleChanging(value);
                ReportPropertyChanging("Id_Role");
                _Id_Role = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Role");
                OnId_RoleChanged();
            }
        }
        private global::System.Int64 _Id_Role;
        partial void OnId_RoleChanging(global::System.Int64 value);
        partial void OnId_RoleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Per
        {
            get
            {
                return _Id_Per;
            }
            set
            {
                OnId_PerChanging(value);
                ReportPropertyChanging("Id_Per");
                _Id_Per = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Per");
                OnId_PerChanged();
            }
        }
        private global::System.Int64 _Id_Per;
        partial void OnId_PerChanging(global::System.Int64 value);
        partial void OnId_PerChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 程序运行结果记录
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="SolutionDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SolutionDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SolutionDO 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="id_problem">id_problem 属性的初始值。</param>
        /// <param name="id_user">id_user 属性的初始值。</param>
        /// <param name="id_language">id_language 属性的初始值。</param>
        public static SolutionDO CreateSolutionDO(global::System.Int64 id, global::System.Int64 id_problem, global::System.Int64 id_user, global::System.Int32 id_language)
        {
            SolutionDO solutionDO = new SolutionDO();
            solutionDO.id = id;
            solutionDO.id_problem = id_problem;
            solutionDO.id_user = id_user;
            solutionDO.id_language = id_language;
            return solutionDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 运行ID（主键）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 题目ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_problem
        {
            get
            {
                return _id_problem;
            }
            set
            {
                Onid_problemChanging(value);
                ReportPropertyChanging("id_problem");
                _id_problem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_problem");
                Onid_problemChanged();
            }
        }
        private global::System.Int64 _id_problem;
        partial void Onid_problemChanging(global::System.Int64 value);
        partial void Onid_problemChanged();
    
        /// <summary>
        /// 用户ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_user
        {
            get
            {
                return _id_user;
            }
            set
            {
                Onid_userChanging(value);
                ReportPropertyChanging("id_user");
                _id_user = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_user");
                Onid_userChanged();
            }
        }
        private global::System.Int64 _id_user;
        partial void Onid_userChanging(global::System.Int64 value);
        partial void Onid_userChanged();
    
        /// <summary>
        /// 用时（秒）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> time
        {
            get
            {
                return _time;
            }
            set
            {
                OntimeChanging(value);
                ReportPropertyChanging("time");
                _time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time");
                OntimeChanged();
            }
        }
        private Nullable<global::System.Int32> _time;
        partial void OntimeChanging(Nullable<global::System.Int32> value);
        partial void OntimeChanged();
    
        /// <summary>
        /// 所用空间（MByte）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> memory
        {
            get
            {
                return _memory;
            }
            set
            {
                OnmemoryChanging(value);
                ReportPropertyChanging("memory");
                _memory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("memory");
                OnmemoryChanged();
            }
        }
        private Nullable<global::System.Int32> _memory;
        partial void OnmemoryChanging(Nullable<global::System.Int32> value);
        partial void OnmemoryChanged();
    
        /// <summary>
        /// 创建时间
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> createTime
        {
            get
            {
                return _createTime;
            }
            set
            {
                OncreateTimeChanging(value);
                ReportPropertyChanging("createTime");
                _createTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createTime");
                OncreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTimeOffset> _createTime;
        partial void OncreateTimeChanging(Nullable<global::System.DateTimeOffset> value);
        partial void OncreateTimeChanged();
    
        /// <summary>
        /// 结果
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String result
        {
            get
            {
                return _result;
            }
            set
            {
                OnresultChanging(value);
                ReportPropertyChanging("result");
                _result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("result");
                OnresultChanged();
            }
        }
        private global::System.String _result;
        partial void OnresultChanging(global::System.String value);
        partial void OnresultChanged();
    
        /// <summary>
        /// 语言
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id_language
        {
            get
            {
                return _id_language;
            }
            set
            {
                Onid_languageChanging(value);
                ReportPropertyChanging("id_language");
                _id_language = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_language");
                Onid_languageChanged();
            }
        }
        private global::System.Int32 _id_language;
        partial void Onid_languageChanging(global::System.Int32 value);
        partial void Onid_languageChanged();
    
        /// <summary>
        /// 用户IP
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String userIp
        {
            get
            {
                return _userIp;
            }
            set
            {
                OnuserIpChanging(value);
                ReportPropertyChanging("userIp");
                _userIp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("userIp");
                OnuserIpChanged();
            }
        }
        private global::System.String _userIp;
        partial void OnuserIpChanging(global::System.String value);
        partial void OnuserIpChanged();
    
        /// <summary>
        /// 代码长度
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String codeLenght
        {
            get
            {
                return _codeLenght;
            }
            set
            {
                OncodeLenghtChanging(value);
                ReportPropertyChanging("codeLenght");
                _codeLenght = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("codeLenght");
                OncodeLenghtChanged();
            }
        }
        private global::System.String _codeLenght;
        partial void OncodeLenghtChanging(global::System.String value);
        partial void OncodeLenghtChanged();
    
        /// <summary>
        /// 判题时间
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> judgeTime
        {
            get
            {
                return _judgeTime;
            }
            set
            {
                OnjudgeTimeChanging(value);
                ReportPropertyChanging("judgeTime");
                _judgeTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("judgeTime");
                OnjudgeTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _judgeTime;
        partial void OnjudgeTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnjudgeTimeChanged();
    
        /// <summary>
        /// 通过百分比（OI模式下可用）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pass_rate
        {
            get
            {
                return _pass_rate;
            }
            set
            {
                Onpass_rateChanging(value);
                ReportPropertyChanging("pass_rate");
                _pass_rate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pass_rate");
                Onpass_rateChanged();
            }
        }
        private global::System.String _pass_rate;
        partial void Onpass_rateChanging(global::System.String value);
        partial void Onpass_rateChanged();
    
        /// <summary>
        /// 所属于竞赛组
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id_contest
        {
            get
            {
                return _id_contest;
            }
            set
            {
                Onid_contestChanging(value);
                ReportPropertyChanging("id_contest");
                _id_contest = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("id_contest");
                Onid_contestChanged();
            }
        }
        private global::System.String _id_contest;
        partial void Onid_contestChanging(global::System.String value);
        partial void Onid_contestChanged();
    
        /// <summary>
        /// 是否有效
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> valid
        {
            get
            {
                return _valid;
            }
            set
            {
                OnvalidChanging(value);
                ReportPropertyChanging("valid");
                _valid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("valid");
                OnvalidChanged();
            }
        }
        private Nullable<global::System.Boolean> _valid;
        partial void OnvalidChanging(Nullable<global::System.Boolean> value);
        partial void OnvalidChanged();
    
        /// <summary>
        /// 题目在竞赛中的序号
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> num
        {
            get
            {
                return _num;
            }
            set
            {
                OnnumChanging(value);
                ReportPropertyChanging("num");
                _num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("num");
                OnnumChanged();
            }
        }
        private Nullable<global::System.Int32> _num;
        partial void OnnumChanging(Nullable<global::System.Int32> value);
        partial void OnnumChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "solutionsourceCode", "sourceCode")]
        public SourceCodeDO sourcecode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceCodeDO>("Model.solutionsourceCode", "sourceCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceCodeDO>("Model.solutionsourceCode", "sourceCode").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SourceCodeDO> sourcecodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceCodeDO>("Model.solutionsourceCode", "sourceCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SourceCodeDO>("Model.solutionsourceCode", "sourceCode", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "languagesolution", "language")]
        public LanguageDO language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageDO>("Model.languagesolution", "language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageDO>("Model.languagesolution", "language").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageDO> languageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageDO>("Model.languagesolution", "language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageDO>("Model.languagesolution", "language", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 源代码表
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="SourceCodeDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceCodeDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SourceCodeDO 对象。
        /// </summary>
        /// <param name="id_solution">Id_solution 属性的初始值。</param>
        /// <param name="source_code">Source_code 属性的初始值。</param>
        public static SourceCodeDO CreateSourceCodeDO(global::System.Int64 id_solution, global::System.String source_code)
        {
            SourceCodeDO sourceCodeDO = new SourceCodeDO();
            sourceCodeDO.Id_solution = id_solution;
            sourceCodeDO.Source_code = source_code;
            return sourceCodeDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 运行ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_solution
        {
            get
            {
                return _Id_solution;
            }
            set
            {
                if (_Id_solution != value)
                {
                    OnId_solutionChanging(value);
                    ReportPropertyChanging("Id_solution");
                    _Id_solution = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id_solution");
                    OnId_solutionChanged();
                }
            }
        }
        private global::System.Int64 _Id_solution;
        partial void OnId_solutionChanging(global::System.Int64 value);
        partial void OnId_solutionChanged();
    
        /// <summary>
        /// 源代码
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source_code
        {
            get
            {
                return _Source_code;
            }
            set
            {
                OnSource_codeChanging(value);
                ReportPropertyChanging("Source_code");
                _Source_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source_code");
                OnSource_codeChanged();
            }
        }
        private global::System.String _Source_code;
        partial void OnSource_codeChanging(global::System.String value);
        partial void OnSource_codeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UGAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UGAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UGAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_User">Id_User 属性的初始值。</param>
        /// <param name="id_UserGroup">Id_UserGroup 属性的初始值。</param>
        public static UGAssignmentDO CreateUGAssignmentDO(global::System.Int64 id, global::System.Int64 id_User, global::System.Int64 id_UserGroup)
        {
            UGAssignmentDO uGAssignmentDO = new UGAssignmentDO();
            uGAssignmentDO.Id = id;
            uGAssignmentDO.Id_User = id_User;
            uGAssignmentDO.Id_UserGroup = id_UserGroup;
            return uGAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_User
        {
            get
            {
                return _Id_User;
            }
            set
            {
                OnId_UserChanging(value);
                ReportPropertyChanging("Id_User");
                _Id_User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_User");
                OnId_UserChanged();
            }
        }
        private global::System.Int64 _Id_User;
        partial void OnId_UserChanging(global::System.Int64 value);
        partial void OnId_UserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_UserGroup
        {
            get
            {
                return _Id_UserGroup;
            }
            set
            {
                OnId_UserGroupChanging(value);
                ReportPropertyChanging("Id_UserGroup");
                _Id_UserGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_UserGroup");
                OnId_UserGroupChanged();
            }
        }
        private global::System.Int64 _Id_UserGroup;
        partial void OnId_UserGroupChanging(global::System.Int64 value);
        partial void OnId_UserGroupChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UPAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UPAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UPAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_User">Id_User 属性的初始值。</param>
        /// <param name="id_Permission">Id_Permission 属性的初始值。</param>
        public static UPAssignmentDO CreateUPAssignmentDO(global::System.Int64 id, global::System.Int64 id_User, global::System.Int64 id_Permission)
        {
            UPAssignmentDO uPAssignmentDO = new UPAssignmentDO();
            uPAssignmentDO.Id = id;
            uPAssignmentDO.Id_User = id_User;
            uPAssignmentDO.Id_Permission = id_Permission;
            return uPAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_User
        {
            get
            {
                return _Id_User;
            }
            set
            {
                OnId_UserChanging(value);
                ReportPropertyChanging("Id_User");
                _Id_User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_User");
                OnId_UserChanged();
            }
        }
        private global::System.Int64 _Id_User;
        partial void OnId_UserChanging(global::System.Int64 value);
        partial void OnId_UserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Permission
        {
            get
            {
                return _Id_Permission;
            }
            set
            {
                OnId_PermissionChanging(value);
                ReportPropertyChanging("Id_Permission");
                _Id_Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Permission");
                OnId_PermissionChanged();
            }
        }
        private global::System.Int64 _Id_Permission;
        partial void OnId_PermissionChanging(global::System.Int64 value);
        partial void OnId_PermissionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="URAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class URAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 URAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_User">Id_User 属性的初始值。</param>
        /// <param name="id_Role">Id_Role 属性的初始值。</param>
        public static URAssignmentDO CreateURAssignmentDO(global::System.Int64 id, global::System.Int64 id_User, global::System.Int64 id_Role)
        {
            URAssignmentDO uRAssignmentDO = new URAssignmentDO();
            uRAssignmentDO.Id = id;
            uRAssignmentDO.Id_User = id_User;
            uRAssignmentDO.Id_Role = id_Role;
            return uRAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_User
        {
            get
            {
                return _Id_User;
            }
            set
            {
                OnId_UserChanging(value);
                ReportPropertyChanging("Id_User");
                _Id_User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_User");
                OnId_UserChanged();
            }
        }
        private global::System.Int64 _Id_User;
        partial void OnId_UserChanging(global::System.Int64 value);
        partial void OnId_UserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Role
        {
            get
            {
                return _Id_Role;
            }
            set
            {
                OnId_RoleChanging(value);
                ReportPropertyChanging("Id_Role");
                _Id_Role = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Role");
                OnId_RoleChanged();
            }
        }
        private global::System.Int64 _Id_Role;
        partial void OnId_RoleChanging(global::System.Int64 value);
        partial void OnId_RoleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="username">Username 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="id_language">Id_language 属性的初始值。</param>
        public static UserDO CreateUserDO(global::System.Int64 id, global::System.String username, global::System.String password, global::System.Int32 id_language)
        {
            UserDO userDO = new UserDO();
            userDO.Id = id;
            userDO.Username = username;
            userDO.Password = password;
            userDO.Id_language = id_language;
            return userDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 昵称
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// 密码
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// E-Mail
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 提交次数
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Submit
        {
            get
            {
                return _Submit;
            }
            set
            {
                OnSubmitChanging(value);
                ReportPropertyChanging("Submit");
                _Submit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submit");
                OnSubmitChanged();
            }
        }
        private Nullable<global::System.Int64> _Submit;
        partial void OnSubmitChanging(Nullable<global::System.Int64> value);
        partial void OnSubmitChanged();
    
        /// <summary>
        /// 成功次数
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Solved
        {
            get
            {
                return _Solved;
            }
            set
            {
                OnSolvedChanging(value);
                ReportPropertyChanging("Solved");
                _Solved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Solved");
                OnSolvedChanged();
            }
        }
        private Nullable<global::System.Int64> _Solved;
        partial void OnSolvedChanging(Nullable<global::System.Int64> value);
        partial void OnSolvedChanged();
    
        /// <summary>
        /// 注册时间
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegTime
        {
            get
            {
                return _RegTime;
            }
            set
            {
                OnRegTimeChanging(value);
                ReportPropertyChanging("RegTime");
                _RegTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegTime");
                OnRegTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegTime;
        partial void OnRegTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRegTimeChanged();
    
        /// <summary>
        /// 最后访问时间
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AccessTime
        {
            get
            {
                return _AccessTime;
            }
            set
            {
                OnAccessTimeChanging(value);
                ReportPropertyChanging("AccessTime");
                _AccessTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessTime");
                OnAccessTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AccessTime;
        partial void OnAccessTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAccessTimeChanged();
    
        /// <summary>
        /// 注册时Ip
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegIp
        {
            get
            {
                return _RegIp;
            }
            set
            {
                OnRegIpChanging(value);
                ReportPropertyChanging("RegIp");
                _RegIp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegIp");
                OnRegIpChanged();
            }
        }
        private global::System.String _RegIp;
        partial void OnRegIpChanging(global::System.String value);
        partial void OnRegIpChanged();
    
        /// <summary>
        /// 最后一次登录IP
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessIp
        {
            get
            {
                return _AccessIp;
            }
            set
            {
                OnAccessIpChanging(value);
                ReportPropertyChanging("AccessIp");
                _AccessIp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessIp");
                OnAccessIpChanged();
            }
        }
        private global::System.String _AccessIp;
        partial void OnAccessIpChanging(global::System.String value);
        partial void OnAccessIpChanged();
    
        /// <summary>
        /// 是否屏蔽
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Defunct
        {
            get
            {
                return _Defunct;
            }
            set
            {
                OnDefunctChanging(value);
                ReportPropertyChanging("Defunct");
                _Defunct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Defunct");
                OnDefunctChanged();
            }
        }
        private Nullable<global::System.Boolean> _Defunct;
        partial void OnDefunctChanging(Nullable<global::System.Boolean> value);
        partial void OnDefunctChanged();
    
        /// <summary>
        /// 学校
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String School
        {
            get
            {
                return _School;
            }
            set
            {
                OnSchoolChanging(value);
                ReportPropertyChanging("School");
                _School = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("School");
                OnSchoolChanged();
            }
        }
        private global::System.String _School;
        partial void OnSchoolChanging(global::System.String value);
        partial void OnSchoolChanged();
    
        /// <summary>
        /// 默认使用语言
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_language
        {
            get
            {
                return _Id_language;
            }
            set
            {
                OnId_languageChanging(value);
                ReportPropertyChanging("Id_language");
                _Id_language = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_language");
                OnId_languageChanged();
            }
        }
        private global::System.Int32 _Id_language;
        partial void OnId_languageChanging(global::System.Int32 value);
        partial void OnId_languageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserGroupDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroupDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserGroupDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserGroupDO CreateUserGroupDO(global::System.Int64 id, global::System.String name)
        {
            UserGroupDO userGroupDO = new UserGroupDO();
            userGroupDO.Id = id;
            userGroupDO.Name = name;
            return userGroupDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }

    #endregion

    
}
