@model OJ.Domain.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>User</legend>

        @Html.HiddenFor(model => model.id)

        <div class="editor-label">
            @Html.LabelFor(model => model.nickName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.nickName)
            @Html.ValidationMessageFor(model => model.nickName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.password)
            @Html.ValidationMessageFor(model => model.password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.submit)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.submit)
            @Html.ValidationMessageFor(model => model.submit)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.solved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.solved)
            @Html.ValidationMessageFor(model => model.solved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.regTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.regTime)
            @Html.ValidationMessageFor(model => model.regTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.accessTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.accessTime)
            @Html.ValidationMessageFor(model => model.accessTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.regIp)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.regIp)
            @Html.ValidationMessageFor(model => model.regIp)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.accessIp)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.accessIp)
            @Html.ValidationMessageFor(model => model.accessIp)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.defunct)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.defunct)
            @Html.ValidationMessageFor(model => model.defunct)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.school)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.school)
            @Html.ValidationMessageFor(model => model.school)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.id_language, "language")
        </div>
        <div class="editor-field">
            @Html.DropDownList("id_language", String.Empty)
            @Html.ValidationMessageFor(model => model.id_language)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
