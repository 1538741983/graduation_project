//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("Model", "RPAssignmentDORoleDo", "RPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.RPAssignmentDO), "RoleDo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.RoleDo), true)]
[assembly: EdmRelationshipAttribute("Model", "RPAssignmentDOPermissionDO", "RPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.RPAssignmentDO), "PermissionDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.PermissionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UserDOURAssignmentDO", "UserDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.UserDO), "URAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.URAssignmentDO), true)]
[assembly: EdmRelationshipAttribute("Model", "URAssignmentDORoleDo", "URAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.URAssignmentDO), "RoleDo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.RoleDo), true)]
[assembly: EdmRelationshipAttribute("Model", "UGAssignmentDOUserDO", "UGAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.UGAssignmentDO), "UserDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.UserDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UGAssignmentDOUserGroupDO", "UGAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.UGAssignmentDO), "UserGroupDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.UserGroupDO), true)]
[assembly: EdmRelationshipAttribute("Model", "PermissionAssignmentDOPermissionDO", "PermissionAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.PermissionAssignmentDO), "PermissionDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.PermissionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "PermissionAssignmentDOMenuDO", "PermissionAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.PermissionAssignmentDO), "MenuDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.MenuDO), true)]
[assembly: EdmRelationshipAttribute("Model", "GPAssignmentDOUserGroupDO", "GPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.GPAssignmentDO), "UserGroupDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.UserGroupDO), true)]
[assembly: EdmRelationshipAttribute("Model", "GPAssignmentDOPermissionDO", "GPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.GPAssignmentDO), "PermissionDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.PermissionDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UPAssignmentDOUserDO", "UPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.UPAssignmentDO), "UserDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.UserDO), true)]
[assembly: EdmRelationshipAttribute("Model", "UPAssignmentDOPermissionDO", "UPAssignmentDO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(OJCMS.Domain.UPAssignmentDO), "PermissionDO", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(OJCMS.Domain.PermissionDO), true)]

#endregion

namespace OJCMS.Domain
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ModelContainer”部分中的连接字符串初始化新 ModelContainer 对象。
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ModelContainer 对象。
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ModelContainer 对象。
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserDO> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<UserDO>("User");
                }
                return _User;
            }
        }
        private ObjectSet<UserDO> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<MenuDO> Menu
        {
            get
            {
                if ((_Menu == null))
                {
                    _Menu = base.CreateObjectSet<MenuDO>("Menu");
                }
                return _Menu;
            }
        }
        private ObjectSet<MenuDO> _Menu;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserGroupDO> UserGroup
        {
            get
            {
                if ((_UserGroup == null))
                {
                    _UserGroup = base.CreateObjectSet<UserGroupDO>("UserGroup");
                }
                return _UserGroup;
            }
        }
        private ObjectSet<UserGroupDO> _UserGroup;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleDo> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<RoleDo>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<RoleDo> _Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PermissionDO> Permission
        {
            get
            {
                if ((_Permission == null))
                {
                    _Permission = base.CreateObjectSet<PermissionDO>("Permission");
                }
                return _Permission;
            }
        }
        private ObjectSet<PermissionDO> _Permission;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RPAssignmentDO> RPAssignment
        {
            get
            {
                if ((_RPAssignment == null))
                {
                    _RPAssignment = base.CreateObjectSet<RPAssignmentDO>("RPAssignment");
                }
                return _RPAssignment;
            }
        }
        private ObjectSet<RPAssignmentDO> _RPAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<URAssignmentDO> URAssignment
        {
            get
            {
                if ((_URAssignment == null))
                {
                    _URAssignment = base.CreateObjectSet<URAssignmentDO>("URAssignment");
                }
                return _URAssignment;
            }
        }
        private ObjectSet<URAssignmentDO> _URAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UGAssignmentDO> UGAssignment
        {
            get
            {
                if ((_UGAssignment == null))
                {
                    _UGAssignment = base.CreateObjectSet<UGAssignmentDO>("UGAssignment");
                }
                return _UGAssignment;
            }
        }
        private ObjectSet<UGAssignmentDO> _UGAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PermissionAssignmentDO> PermissionAssignment
        {
            get
            {
                if ((_PermissionAssignment == null))
                {
                    _PermissionAssignment = base.CreateObjectSet<PermissionAssignmentDO>("PermissionAssignment");
                }
                return _PermissionAssignment;
            }
        }
        private ObjectSet<PermissionAssignmentDO> _PermissionAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GPAssignmentDO> GPAssignment
        {
            get
            {
                if ((_GPAssignment == null))
                {
                    _GPAssignment = base.CreateObjectSet<GPAssignmentDO>("GPAssignment");
                }
                return _GPAssignment;
            }
        }
        private ObjectSet<GPAssignmentDO> _GPAssignment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UPAssignmentDO> UPAssignment
        {
            get
            {
                if ((_UPAssignment == null))
                {
                    _UPAssignment = base.CreateObjectSet<UPAssignmentDO>("UPAssignment");
                }
                return _UPAssignment;
            }
        }
        private ObjectSet<UPAssignmentDO> _UPAssignment;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(UserDO userDO)
        {
            base.AddObject("User", userDO);
        }
    
        /// <summary>
        /// 用于向 Menu EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMenu(MenuDO menuDO)
        {
            base.AddObject("Menu", menuDO);
        }
    
        /// <summary>
        /// 用于向 UserGroup EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserGroup(UserGroupDO userGroupDO)
        {
            base.AddObject("UserGroup", userGroupDO);
        }
    
        /// <summary>
        /// 用于向 Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRole(RoleDo roleDo)
        {
            base.AddObject("Role", roleDo);
        }
    
        /// <summary>
        /// 用于向 Permission EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPermission(PermissionDO permissionDO)
        {
            base.AddObject("Permission", permissionDO);
        }
    
        /// <summary>
        /// 用于向 RPAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRPAssignment(RPAssignmentDO rPAssignmentDO)
        {
            base.AddObject("RPAssignment", rPAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 URAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToURAssignment(URAssignmentDO uRAssignmentDO)
        {
            base.AddObject("URAssignment", uRAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 UGAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUGAssignment(UGAssignmentDO uGAssignmentDO)
        {
            base.AddObject("UGAssignment", uGAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 PermissionAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPermissionAssignment(PermissionAssignmentDO permissionAssignmentDO)
        {
            base.AddObject("PermissionAssignment", permissionAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 GPAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGPAssignment(GPAssignmentDO gPAssignmentDO)
        {
            base.AddObject("GPAssignment", gPAssignmentDO);
        }
    
        /// <summary>
        /// 用于向 UPAssignment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUPAssignment(UPAssignmentDO uPAssignmentDO)
        {
            base.AddObject("UPAssignment", uPAssignmentDO);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="GPAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GPAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GPAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_UserGroup">Id_UserGroup 属性的初始值。</param>
        /// <param name="id_Permission">Id_Permission 属性的初始值。</param>
        public static GPAssignmentDO CreateGPAssignmentDO(global::System.Int64 id, global::System.Int64 id_UserGroup, global::System.Int64 id_Permission)
        {
            GPAssignmentDO gPAssignmentDO = new GPAssignmentDO();
            gPAssignmentDO.Id = id;
            gPAssignmentDO.Id_UserGroup = id_UserGroup;
            gPAssignmentDO.Id_Permission = id_Permission;
            return gPAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_UserGroup
        {
            get
            {
                return _Id_UserGroup;
            }
            set
            {
                OnId_UserGroupChanging(value);
                ReportPropertyChanging("Id_UserGroup");
                _Id_UserGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_UserGroup");
                OnId_UserGroupChanged();
            }
        }
        private global::System.Int64 _Id_UserGroup;
        partial void OnId_UserGroupChanging(global::System.Int64 value);
        partial void OnId_UserGroupChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Permission
        {
            get
            {
                return _Id_Permission;
            }
            set
            {
                OnId_PermissionChanging(value);
                ReportPropertyChanging("Id_Permission");
                _Id_Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Permission");
                OnId_PermissionChanged();
            }
        }
        private global::System.Int64 _Id_Permission;
        partial void OnId_PermissionChanging(global::System.Int64 value);
        partial void OnId_PermissionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 菜单
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="MenuDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 MenuDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="code">Code 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static MenuDO CreateMenuDO(global::System.Int64 id, global::System.String code, global::System.String name)
        {
            MenuDO menuDO = new MenuDO();
            menuDO.Id = id;
            menuDO.Code = code;
            menuDO.Name = name;
            return menuDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 菜单项编码
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// 菜单名称
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 跳转路径
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NavigateUrl
        {
            get
            {
                return _NavigateUrl;
            }
            set
            {
                OnNavigateUrlChanging(value);
                ReportPropertyChanging("NavigateUrl");
                _NavigateUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NavigateUrl");
                OnNavigateUrlChanged();
            }
        }
        private global::System.String _NavigateUrl;
        partial void OnNavigateUrlChanging(global::System.String value);
        partial void OnNavigateUrlChanged();
    
        /// <summary>
        /// 目标
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Target
        {
            get
            {
                return _Target;
            }
            set
            {
                OnTargetChanging(value);
                ReportPropertyChanging("Target");
                _Target = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Target");
                OnTargetChanged();
            }
        }
        private global::System.String _Target;
        partial void OnTargetChanging(global::System.String value);
        partial void OnTargetChanged();
    
        /// <summary>
        /// 父主键
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Id_perent
        {
            get
            {
                return _Id_perent;
            }
            set
            {
                OnId_perentChanging(value);
                ReportPropertyChanging("Id_perent");
                _Id_perent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_perent");
                OnId_perentChanged();
            }
        }
        private Nullable<global::System.Int64> _Id_perent;
        partial void OnId_perentChanging(Nullable<global::System.Int64> value);
        partial void OnId_perentChanged();
    
        /// <summary>
        /// 内码（树上用）
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InnerCode
        {
            get
            {
                return _InnerCode;
            }
            set
            {
                OnInnerCodeChanging(value);
                ReportPropertyChanging("InnerCode");
                _InnerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InnerCode");
                OnInnerCodeChanged();
            }
        }
        private global::System.String _InnerCode;
        partial void OnInnerCodeChanging(global::System.String value);
        partial void OnInnerCodeChanged();
    
        /// <summary>
        /// 删除标志
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Ds
        {
            get
            {
                return _Ds;
            }
            set
            {
                OnDsChanging(value);
                ReportPropertyChanging("Ds");
                _Ds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ds");
                OnDsChanged();
            }
        }
        private global::System.Boolean _Ds = false;
        partial void OnDsChanging(global::System.Boolean value);
        partial void OnDsChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// 系统数据标识
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Fg_sys
        {
            get
            {
                return _Fg_sys;
            }
            set
            {
                OnFg_sysChanging(value);
                ReportPropertyChanging("Fg_sys");
                _Fg_sys = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fg_sys");
                OnFg_sysChanged();
            }
        }
        private global::System.Boolean _Fg_sys = false;
        partial void OnFg_sysChanging(global::System.Boolean value);
        partial void OnFg_sysChanged();
    
        /// <summary>
        /// 顺序
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private Nullable<global::System.Int32> _Num;
        partial void OnNumChanging(Nullable<global::System.Int32> value);
        partial void OnNumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PermissionAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PermissionAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_Menu">Id_Menu 属性的初始值。</param>
        /// <param name="id_Permission">Id_Permission 属性的初始值。</param>
        public static PermissionAssignmentDO CreatePermissionAssignmentDO(global::System.Int64 id, global::System.Int64 id_Menu, global::System.Int64 id_Permission)
        {
            PermissionAssignmentDO permissionAssignmentDO = new PermissionAssignmentDO();
            permissionAssignmentDO.Id = id;
            permissionAssignmentDO.Id_Menu = id_Menu;
            permissionAssignmentDO.Id_Permission = id_Permission;
            return permissionAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Menu
        {
            get
            {
                return _Id_Menu;
            }
            set
            {
                OnId_MenuChanging(value);
                ReportPropertyChanging("Id_Menu");
                _Id_Menu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Menu");
                OnId_MenuChanged();
            }
        }
        private global::System.Int64 _Id_Menu;
        partial void OnId_MenuChanging(global::System.Int64 value);
        partial void OnId_MenuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Permission
        {
            get
            {
                return _Id_Permission;
            }
            set
            {
                OnId_PermissionChanging(value);
                ReportPropertyChanging("Id_Permission");
                _Id_Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Permission");
                OnId_PermissionChanged();
            }
        }
        private global::System.Int64 _Id_Permission;
        partial void OnId_PermissionChanging(global::System.Int64 value);
        partial void OnId_PermissionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PermissionDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PermissionDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static PermissionDO CreatePermissionDO(global::System.Int64 id, global::System.String name)
        {
            PermissionDO permissionDO = new PermissionDO();
            permissionDO.Id = id;
            permissionDO.Name = name;
            return permissionDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RoleDo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleDo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleDo 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static RoleDo CreateRoleDo(global::System.Int64 id, global::System.String name)
        {
            RoleDo roleDo = new RoleDo();
            roleDo.Id = id;
            roleDo.Name = name;
            return roleDo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 角色权限分配
    /// </summary>
    /// <LongDescription>
    /// 管理角色和权限之间的对应关系
    /// </LongDescription>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RPAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RPAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RPAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_Role">Id_Role 属性的初始值。</param>
        /// <param name="id_Per">Id_Per 属性的初始值。</param>
        public static RPAssignmentDO CreateRPAssignmentDO(global::System.Int64 id, global::System.Int64 id_Role, global::System.Int64 id_Per)
        {
            RPAssignmentDO rPAssignmentDO = new RPAssignmentDO();
            rPAssignmentDO.Id = id;
            rPAssignmentDO.Id_Role = id_Role;
            rPAssignmentDO.Id_Per = id_Per;
            return rPAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Role
        {
            get
            {
                return _Id_Role;
            }
            set
            {
                OnId_RoleChanging(value);
                ReportPropertyChanging("Id_Role");
                _Id_Role = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Role");
                OnId_RoleChanged();
            }
        }
        private global::System.Int64 _Id_Role;
        partial void OnId_RoleChanging(global::System.Int64 value);
        partial void OnId_RoleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Per
        {
            get
            {
                return _Id_Per;
            }
            set
            {
                OnId_PerChanging(value);
                ReportPropertyChanging("Id_Per");
                _Id_Per = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Per");
                OnId_PerChanged();
            }
        }
        private global::System.Int64 _Id_Per;
        partial void OnId_PerChanging(global::System.Int64 value);
        partial void OnId_PerChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UGAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UGAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UGAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_User">Id_User 属性的初始值。</param>
        /// <param name="id_UserGroup">Id_UserGroup 属性的初始值。</param>
        public static UGAssignmentDO CreateUGAssignmentDO(global::System.Int64 id, global::System.Int64 id_User, global::System.Int64 id_UserGroup)
        {
            UGAssignmentDO uGAssignmentDO = new UGAssignmentDO();
            uGAssignmentDO.Id = id;
            uGAssignmentDO.Id_User = id_User;
            uGAssignmentDO.Id_UserGroup = id_UserGroup;
            return uGAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_User
        {
            get
            {
                return _Id_User;
            }
            set
            {
                OnId_UserChanging(value);
                ReportPropertyChanging("Id_User");
                _Id_User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_User");
                OnId_UserChanged();
            }
        }
        private global::System.Int64 _Id_User;
        partial void OnId_UserChanging(global::System.Int64 value);
        partial void OnId_UserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_UserGroup
        {
            get
            {
                return _Id_UserGroup;
            }
            set
            {
                OnId_UserGroupChanging(value);
                ReportPropertyChanging("Id_UserGroup");
                _Id_UserGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_UserGroup");
                OnId_UserGroupChanged();
            }
        }
        private global::System.Int64 _Id_UserGroup;
        partial void OnId_UserGroupChanging(global::System.Int64 value);
        partial void OnId_UserGroupChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UPAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UPAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UPAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_User">Id_User 属性的初始值。</param>
        /// <param name="id_Permission">Id_Permission 属性的初始值。</param>
        public static UPAssignmentDO CreateUPAssignmentDO(global::System.Int64 id, global::System.Int64 id_User, global::System.Int64 id_Permission)
        {
            UPAssignmentDO uPAssignmentDO = new UPAssignmentDO();
            uPAssignmentDO.Id = id;
            uPAssignmentDO.Id_User = id_User;
            uPAssignmentDO.Id_Permission = id_Permission;
            return uPAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_User
        {
            get
            {
                return _Id_User;
            }
            set
            {
                OnId_UserChanging(value);
                ReportPropertyChanging("Id_User");
                _Id_User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_User");
                OnId_UserChanged();
            }
        }
        private global::System.Int64 _Id_User;
        partial void OnId_UserChanging(global::System.Int64 value);
        partial void OnId_UserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Permission
        {
            get
            {
                return _Id_Permission;
            }
            set
            {
                OnId_PermissionChanging(value);
                ReportPropertyChanging("Id_Permission");
                _Id_Permission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Permission");
                OnId_PermissionChanged();
            }
        }
        private global::System.Int64 _Id_Permission;
        partial void OnId_PermissionChanging(global::System.Int64 value);
        partial void OnId_PermissionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="URAssignmentDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class URAssignmentDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 URAssignmentDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="id_User">Id_User 属性的初始值。</param>
        /// <param name="id_Role">Id_Role 属性的初始值。</param>
        public static URAssignmentDO CreateURAssignmentDO(global::System.Int64 id, global::System.Int64 id_User, global::System.Int64 id_Role)
        {
            URAssignmentDO uRAssignmentDO = new URAssignmentDO();
            uRAssignmentDO.Id = id;
            uRAssignmentDO.Id_User = id_User;
            uRAssignmentDO.Id_Role = id_Role;
            return uRAssignmentDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_User
        {
            get
            {
                return _Id_User;
            }
            set
            {
                OnId_UserChanging(value);
                ReportPropertyChanging("Id_User");
                _Id_User = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_User");
                OnId_UserChanged();
            }
        }
        private global::System.Int64 _Id_User;
        partial void OnId_UserChanging(global::System.Int64 value);
        partial void OnId_UserChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id_Role
        {
            get
            {
                return _Id_Role;
            }
            set
            {
                OnId_RoleChanging(value);
                ReportPropertyChanging("Id_Role");
                _Id_Role = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Role");
                OnId_RoleChanged();
            }
        }
        private global::System.Int64 _Id_Role;
        partial void OnId_RoleChanging(global::System.Int64 value);
        partial void OnId_RoleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 用户
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="pwd">Pwd 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserDO CreateUserDO(global::System.Int64 id, global::System.String userName, global::System.String pwd, global::System.String name)
        {
            UserDO userDO = new UserDO();
            userDO.Id = id;
            userDO.UserName = userName;
            userDO.Pwd = pwd;
            userDO.Name = name;
            return userDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 用户ID
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 用户名
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 密码
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pwd
        {
            get
            {
                return _Pwd;
            }
            set
            {
                OnPwdChanging(value);
                ReportPropertyChanging("Pwd");
                _Pwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Pwd");
                OnPwdChanged();
            }
        }
        private global::System.String _Pwd;
        partial void OnPwdChanging(global::System.String value);
        partial void OnPwdChanged();
    
        /// <summary>
        /// 用户姓名
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// 年龄
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// 生日
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthday;
        partial void OnBirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// 家庭住址
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 删除标志
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Ds
        {
            get
            {
                return _Ds;
            }
            set
            {
                OnDsChanging(value);
                ReportPropertyChanging("Ds");
                _Ds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ds");
                OnDsChanged();
            }
        }
        private global::System.Boolean _Ds = false;
        partial void OnDsChanging(global::System.Boolean value);
        partial void OnDsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="UserGroupDO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroupDO : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserGroupDO 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserGroupDO CreateUserGroupDO(global::System.Int64 id, global::System.String name)
        {
            UserGroupDO userGroupDO = new UserGroupDO();
            userGroupDO.Id = id;
            userGroupDO.Name = name;
            return userGroupDO;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }

    #endregion

    
}
